$date
	Wed Nov 22 02:26:49 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Fp_mul_fsm_tb $end
$var wire 16 ! producto [15:0] $end
$var reg 1 " SAVE $end
$var reg 1 # clk $end
$var reg 16 $ na [15:0] $end
$var reg 1 % rst $end
$scope module uut $end
$var wire 1 " SAVE $end
$var wire 1 # clk $end
$var wire 16 & na [15:0] $end
$var wire 1 % rst $end
$var wire 1 ' zero $end
$var wire 1 ( subnormal $end
$var wire 1 ) snan $end
$var wire 1 * qnan $end
$var wire 16 + product [15:0] $end
$var wire 1 , normal $end
$var wire 1 - inf $end
$var reg 16 . current_a [15:0] $end
$var reg 16 / current_b [15:0] $end
$var reg 2 0 next_state [1:0] $end
$var reg 16 1 producto [15:0] $end
$var reg 2 2 state [1:0] $end
$scope module mod $end
$var wire 16 3 na [15:0] $end
$var wire 16 4 nb [15:0] $end
$var wire 16 5 producto [15:0] $end
$var wire 1 6 Bzero $end
$var wire 1 7 Bsubnormal $end
$var wire 1 8 Bsnan $end
$var wire 1 9 Bqnan $end
$var wire 1 : Bnormal $end
$var wire 1 ; Binf $end
$var wire 1 < Azero $end
$var wire 1 = Asubnormal $end
$var wire 1 > Asnan $end
$var wire 1 ? Aqnan $end
$var wire 1 @ Anormal $end
$var wire 1 A Ainf $end
$var reg 16 B Signo [15:0] $end
$var reg 5 C expa [4:0] $end
$var reg 5 D expb [4:0] $end
$var reg 6 E exponent [5:0] $end
$var reg 1 - inf $end
$var reg 1 , normal $end
$var reg 22 F partialResult [21:0] $end
$var reg 16 G productoTemp [15:0] $end
$var reg 1 * qnan $end
$var reg 1 ) snan $end
$var reg 1 ( subnormal $end
$var reg 1 ' zero $end
$scope module A $end
$var wire 16 H float [15:0] $end
$var wire 1 A inf $end
$var wire 1 @ normal $end
$var wire 1 ? qnan $end
$var wire 1 > snan $end
$var wire 1 = subnormal $end
$var wire 1 < zero $end
$var wire 1 I sigZeroes $end
$var wire 1 J expZeroes $end
$var wire 1 K expOnes $end
$upscope $end
$scope module B $end
$var wire 16 L float [15:0] $end
$var wire 1 ; inf $end
$var wire 1 : normal $end
$var wire 1 9 qnan $end
$var wire 1 8 snan $end
$var wire 1 7 subnormal $end
$var wire 1 6 zero $end
$var wire 1 M sigZeroes $end
$var wire 1 N expZeroes $end
$var wire 1 O expOnes $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0O
1N
1M
b0 L
0K
1J
1I
b0 H
b0 G
b100000000000000000000 F
b110001 E
b10001 D
b10001 C
b0 B
0A
0@
0?
0>
0=
1<
0;
0:
09
08
07
16
b0 5
b0 4
b0 3
b11 2
b0 1
b11 0
b0 /
b0 .
0-
0,
b0 +
0*
0)
0(
1'
bx &
1%
bx $
0#
0"
b0 !
$end
#2
b0 0
0%
1"
b100000000000000 $
b100000000000000 &
#3
b11 0
0"
#5
1#
#10
0#
#13
b0 0
1"
#15
1@
0<
b1 0
0J
1'
b100000000000000 !
b100000000000000 1
b0 2
b100000000000000 .
b100000000000000 3
b100000000000000 H
1#
#20
0#
#23
b0 0
b100001000000000 $
b100001000000000 &
0"
#25
1#
#30
0#
#33
b1 0
1"
#35
1:
1,
b100011000000000 +
b100011000000000 5
b100011000000000 G
b110000000000000000000 F
b10001 E
b1 D
b1 C
06
b11 0
0N
0M
0'
b100001000000000 !
b100001000000000 1
b1 2
b100001000000000 /
b100001000000000 4
b100001000000000 L
1#
#40
0#
#43
b1 0
0"
#45
1#
#50
0#
#53
b11 0
1"
#55
b100011000000000 !
b100011000000000 1
b0 0
b11 2
1#
#60
0#
#63
b11 0
0"
#65
1#
#70
0#
#73
